   #[1]Java sort code for an array of integers? [2]alternate [3]alternate
   [4]alternate [5]alternate [6]alternate [7]alternate [8]alternate
   [9]alternate [10]alternate [11]next

   [b?s=2115300978&t=531233448]

     * [12]‚åÇHome
     * [13]Mail
     * [14]Search
     * [15]News
     * [16]Sports
     * [17]Finance
     * [18]Weather
     * [19]Games
     * [20]Answers
     * [21]Screen
     * [22]Flickr
     * [23]Mobile
     * [24]More‚ãÅ

       IFRAME:
       [25]https://s.yimg.com/os/mit/media/m/base/images/transparent-95031
       .png

          + [26]Politics
          + [27]Celebrity
          + [28]Movies
          + [29]Music
          + [30]TV
          + [31]Groups
          + [32]Health
          + [33]Style
          + [34]Beauty
          + [35]Food
          + [36]Parenting
          + [37]Makers
          + [38]Tech
          + [39]Shopping
          + [40]Travel
          + [41]Autos
          + [42]Real Estate
     * [43]Firefox Install the new Firefox ¬ª

   [44]Yahoo Answers
   ____________________
                       Search Answers Search Web
     * [45]üë§ Sign In
     * [46]‚úâ Mail
     * [47]‚öô Help
          + [48]Account Info
          + [49]Help
          + [50]Suggestions
          + [51]Send Feedback

     * [52]Answers Home

     * [53]All Categories
     * [54]Arts & Humanities
     * [55]Beauty & Style
     * [56]Business & Finance
     * [57]Cars & Transportation
     * [58]Computers & Internet
     * [59]Consumer Electronics
     * [60]Dining Out
     * [61]Education & Reference
     * [62]Entertainment & Music
     * [63]Environment
     * [64]Family & Relationships
     * [65]Food & Drink
     * [66]Games & Recreation
     * [67]Health
     * [68]Home & Garden
     * [69]Local Businesses
     * [70]News & Events
     * [71]Pets
     * [72]Politics & Government
     * [73]Pregnancy & Parenting
     * [74]Science & Mathematics
     * [75]Social Science
     * [76]Society & Culture
     * [77]Sports
     * [78]Travel
     * [79]Yahoo Products

     * International
          + [80]Argentina
          + [81]Australia
          + [82]Brazil
          + [83]Canada
          + [84]France
          + [85]Germany
          + [86]India
          + [87]Indonesia
          + [88]Italy
          + [89]Malaysia
          + [90]Mexico
          + [91]New Zealand
          + [92]Philippines
          + [93]Quebec
          + [94]Singapore
          + [95]Taiwan
          + [96]Hong Kong
          + [97]Spain
          + [98]Thailand
          + [99]UK & Ireland
          + [100]Vietnam
          + [101]Espanol
     * About
          + [102]About Answers
          + [103]Community Guidelines
          + [104]Leaderboard
          + [105]Knowledge Partners
          + [106]Points & Levels
          + [107]Blog
          + [108]Safety Tips

   [109]Get the app
   [110]Computers & Internet [111]Programming & Design
   [112]Next
   [113]Aeon

Java sort code for an array of integers?

   What is the fastest sort code for an array of integers in java that you
   know of? Thanks!
   Update: Great answers, but I guess I should've including that I am
   primarily looking for an algorithm that is not part of a
   library....something like introsort, heapsort, merge sort, etc. but I
   don't know which is the fastest.
   Update 2: mbspringer133b is on the right track...but I know there are
   faster sorts than bubble.
   Follow
   4 answers 4
   Report Abuse
   Are you sure you want to delete this answer? (BUTTON) Yes (BUTTON) No

   IFRAME:
   [114]https://dmros.ysm.yahoo.com/ros/?c=cbdde9a6&w=678&h=315&ty=noscrip
   t&tt=Java sort code for an array of
   integers?&r=yahoo%2C+answers%2C+questions%2C+Computers+%26+Internet%2CP
   rogramming+%26+Design

   Sorry, something has gone wrong.

Answers

   Relevance
   [115]Rating [116]Newest [117]Oldest
   [118]mbspringer133b
   Best Answer:  bubble sort ?
   =======================
   heres an unrelated snippet
   =========================
   /**
   * @(#)sort.java
   *
   * sort application
   *
   * @author
   * @version 1.00 2008/4/4
   */
   public class sort {
   public static void main(String[] args) {
   String outIT ;
   int iSize[] = new int [15];
   int bSize[] = new int [15];
   outIT = " " ;
   bSize[1] = 0 ; bSize[2] = 0 ; bSize[3] = 0 ; bSize[4] = 0 ;
   bSize[5] = 0 ; bSize[6] = 0 ; bSize[7] = 0 ;
   bSize[8] = 0 ; bSize[9] = 0 ; bSize[10] = 0 ;
   //
   iSize[1] = 11 ; iSize[2] = 12;iSize[3] = 13 ;iSize[4] = 33 ;
   iSize[5] = 15 ;iSize[6] = 16;iSize[7] = 4 ;
   iSize[8] = 18 ;iSize[9] = 19;iSize[10] = 5;
   int i;
   for (i=1; i<10; i++)
   if (iSize[i] > iSize[i+1])
   { bSize[i] = iSize[i] ;
   outIT =outIT + String.valueOf(bSize[i] + " , ");
   }
   else { bSize[i] = iSize[i+1] ;
   outIT =outIT + String.valueOf(bSize[i] + " , ");
   }
   // TODO, add your application code
   System.out.println(outIT);
   }
   }
   =================================
   Java Code for a Bubble Sort
   In the bubbleSort.java program, shown in Listing 3.1, a class called
   ArrayBub encapsulates an array a[], which holds variables of type long.
   In a more serious program, the data would probably consist of objects,
   but we use a primitive type for simplicity. (We'll see how objects are
   sorted in the objectSort.java program in Listing 3.4.) Also, to reduce
   the size of the listing, we don't show find() and delete() methods with
   the ArrayBub class, although they would normally be part of a such a
   class.
   LISTING 3.1 The bubbleSort.java Program
   // bubbleSort.java
   // demonstrates bubble sort
   // to run this program: C>java BubbleSortApp
   //////////////////////////////////////...
   class ArrayBub
   {
   private long[] a; // ref to array a
   private int nElems; // number of data items
   //------------------------------------...
   public ArrayBub(int max) // constructor
   {
   a = new long[max]; // create the array
   nElems = 0; // no items yet
   }
   //------------------------------------...
   public void insert(long value) // put element into array
   {
   a[nElems] = value; // insert it
   nElems++; // increment size
   }
   //------------------------------------...
   public void display() // displays array contents
   {
   for(int j=0; j<nElems; j++) // for each element,
   System.out.print(a[j] + " "); // display it
   System.out.println("");
   }
   //------------------------------------...
   public void bubbleSort()
   {
   int out, in;
   for(out=nElems-1; out>1; out--) // outer loop (backward)
   for(in=0; in<out; in++) // inner loop (forward)
   if( a[in] > a[in+1] ) // out of order?
   swap(in, in+1); // swap them
   } // end bubbleSort()
   //------------------------------------...
   private void swap(int one, int two)
   {
   long temp = a[one];
   a[one] = a[two];
   a[two] = temp;
   }
   //------------------------------------...
   } // end class ArrayBub
   //////////////////////////////////////...
   class BubbleSortApp
   {
   public static void main(String[] args)
   {
   int maxSize = 100; // array size
   ArrayBub arr; // reference to array
   arr = new ArrayBub(maxSize); // create the array
   arr.insert(77); // insert 10 items
   arr.insert(99);
   arr.insert(44);
   arr.insert(55);
   arr.insert(22);
   arr.insert(88);
   arr.insert(11);
   arr.insert(00);
   arr.insert(66);
   arr.insert(33);
   arr.display(); // display items
   arr.bubbleSort(); // bubble sort them
   arr.display(); // display them again
   } // end main()
   } // end class BubbleSortApp
   //////////////////////////////////////...
   The constructor and the insert() and display() methods of this class
   are similar to those we've seen before. However, there's a new method:
   bubbleSort(). When this method is invoked from main(), the contents of
   the array are rearranged into sorted order.
   The main() routine inserts 10 items into the array in random order,
   displays the array, calls bubbleSort() to sort it, and then displays it
   again. Here's the output:
   77 99 44 55 22 88 11 0 66 33
   0 11 22 33 44 55 66 77 88 99
   The bubbleSort() method is only four lines long. Here it is, extracted
   from the listing:
   public void bubbleSort()
   {
   int out, in;
   for(out=nElems-1; out>1; out--) // outer loop (backward)
   for(in=0; in<out; in++) // inner loop (forward)
   if( a[in] > a[in+1] ) // out of order?
   swap(in, in+1); // swap them
   } // end bubbleSort()
   The idea is to put the smallest item at the beginning of the array
   (index 0) and the largest item at the end (index nElems-1). The loop
   counter out in the outer for loop starts at the end of the array, at
   nElems-1, and decrements itself each time through the loop. The items
   at indices greater than out are always completely sorted. The out
   variable moves left after each pass by in so that items that are
   already sorted are no longer involved in the algorithm.
   The inner loop counter in starts at the beginning of the array and
   increments itself each cycle of the inner loop, exiting when it reaches
   out. Within the inner loop, the two array cells pointed to by in and
   in+1 are compared, and swapped if the one in in is larger than the one
   in in+1.
   For clarity, we use a separate swap() method to carry out the swap. It
   simply exchanges the two values in the two array cells, using a
   temporary variable to hold the value of the first cell while the first
   cell takes on the value in the second and then setting the second cell
   to the temporary value. Actually, using a separate swap() method may
   not be a good idea in practice because the function call adds a small
   amount of overhead. If you're writing your own sorting routine, you may
   prefer to put the swap instructions in line to gain a slight increase
   in speed.
   Invariants
   In many algorithms there are conditions that remain unchanged as the
   algorithm proceeds. These conditions are called invariants. Recognizing
   invariants can be useful in understanding the algorithm. In certain
   situations they may also be helpful in debugging; you can repeatedly
   check that the invariant is true, and signal an error if it isn't.
   In the bubbleSort.java program, the invariant is that the data items to
   the right of out are sorted. This remains true throughout the running
   of the algorithm. (On the first pass, nothing has been sorted yet, and
   there are no items to the right of out because it starts on the
   rightmost element.)
   Efficiency of the Bubble Sort
   As you can see by watching the BubbleSort Workshop applet with 10 bars,
   the inner and inner+1 arrows make nine comparisons on the first pass,
   eight on the second, and so on, down to one comparison on the last
   pass. For 10 items, this is
   9 + 8 + 7 + 6 + 5 + 4 + 3 + 2 + 1 = 45
   In general, where N is the number of items in the array, there are N-1
   comparisons on the first pass, N-2 on the second, and so on. The
   formula for the sum of such a series is
   (N‚Äì1) + (N‚Äì2) + (N‚Äì3) + ... + 1 = N*(N‚Äì1)/2
   N*(N‚Äì1)/2 is 45 (10*9/2) when N is 10.
   Thus, the algorithm makes about N2‚ÅÑ2 comparisons (ignoring the ‚Äì1,
   which doesn't make much difference, especially if N is large).
   There are fewer swaps than there are comparisons because two bars are
   swapped only if they need to be. If the data is random, a swap is
   necessary about half the time, so there will be about N2‚ÅÑ4 swaps.
   (Although in the worst case, with the initial data inversely sorted, a
   swap is necessary with every comparison.)
   Both swaps and comparisons are proportional to N2. Because constants
   don't count in Big O notation, we can ignore the 2 and the 4 and say
   that the bubble sort runs in O(N2) time. This is slow, as you can
   verify by running the BubbleSort Workshop applet with 100 bars.
   Whenever you see one loop nested within another, such as those in the
   bubble sort and the other sorting algorithms in this chapter, you can
   suspect that an algorithm runs in O(N2) time. The outer loop executes N
   times, and the inner loop executes N (or perhaps N divided by some
   constant) times for each cycle of the outer loop. This means you're
   doing something approximately N*N or N2 times.
   Source(s): [119]http://www.informit.com/articles/article...
   [120]mbspringer133b ¬∑ 8 years ago
   1
   Thumbs up
   0
   Thumbs down
   Comment
   [profile_b96.png]

   Add a comment

   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   Submit
   []
   ¬∑ just now
   Asker's rating 4 out of 5
   Report Abuse
     * [121]joebutnotjoe
       Wikipedia has a good page with a table listing the big O of many
       different sorting algorithms. I'd go with quicksort because it's
       fast and easily recognizable, people'd be all like "omg he can code
       quicksort" :)
       Source(s): [122]http://en.wikipedia.org/wiki/Sorting_alg...
       [123]joebutnotjoe ¬∑ 8 years ago
       0
       Thumbs up
       0
       Thumbs down
       Comment
       [profile_b96.png]
       Add a comment

       ____________________________________________________________
       ____________________________________________________________
       ____________________________________________________________
       ____________________________________________________________
       Submit
       []
       ¬∑ just now
       Report Abuse
     * [124]blessed_thang
       The fastest is a Collections framework.
       int[] nums = new int[] {101,22,3,94,2};
       Arrays.sort(num);
       that is ascending. Generics and autoboxing Java6.
       ============
       C++ "designed to be difficult and built to stay that way."
       Incidentially, the fastest bubble sort is python, hands down.
       Source(s): [125]http://www.exampledepot.com/egs/java.uti...
       [126]http://java.sun.com/docs/books/tutorial/...
       [127]blessed_thang ¬∑ 8 years ago
       0
       Thumbs up
       0
       Thumbs down
       Comment
       [profile_b96.png]
       Add a comment

       ____________________________________________________________
       ____________________________________________________________
       ____________________________________________________________
       ____________________________________________________________
       Submit
       []
       ¬∑ just now
       Report Abuse
     * [128]Tom B
       Use C++, there is no such thing as fast in java.
       [129]Tom B ¬∑ 8 years ago
       0
       Thumbs up
       6
       Thumbs down
       Comment
       [profile_b96.png]
       Add a comment

       ____________________________________________________________
       ____________________________________________________________
       ____________________________________________________________
       ____________________________________________________________
       Submit
       []
       ¬∑ just now
       Report Abuse

Add your answer

   Java sort code for an array of integers?
   What is the fastest sort code for an array of integers in java that you
   know of? Thanks!
   Add your answer

   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________

   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   Source
   Submit Cancel

Report Abuse

   (*) I think this question violates the Community Guidelines

   Chat or rant, adult content, spam, insulting other members,[130]show
   more
   ( ) I think this question violates the Terms of Service

   Harm to minors, violence or threats, harassment or privacy invasion,
   impersonation or misrepresentation, fraud or phishing, [131]show more

Additional Details


   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________

   If you believe your intellectual property has been infringed and would
   like to file a complaint, please see our [132]Copyright/IP Policy
   Report Abuse
   Cancel

Report Abuse

   (*) I think this answer violates the Community Guidelines

   Chat or rant, adult content, spam, insulting other members,[133]show
   more
   ( ) I think this answer violates the Terms of Service

   Harm to minors, violence or threats, harassment or privacy invasion,
   impersonation or misrepresentation, fraud or phishing, [134]show more

Additional Details


   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________

   If you believe your intellectual property has been infringed and would
   like to file a complaint, please see our [135]Copyright/IP Policy
   Report Abuse
   Cancel

Report Abuse

   (*) I think this comment violates the Community Guidelines

   Chat or rant, adult content, spam, insulting other members,[136]show
   more
   ( ) I think this comment violates the Terms of Service

   Harm to minors, violence or threats, harassment or privacy invasion,
   impersonation or misrepresentation, fraud or phishing, [137]show more

Additional Details


   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________

   If you believe your intellectual property has been infringed and would
   like to file a complaint, please see our [138]Copyright/IP Policy
   Report Abuse
   Cancel

Ask a question

   usually answered in minutes!

   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________

   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   Expand¬ª
   Details
   Details
   Submit
   Existing questions

   [139]More
     * Tell us some more
     * Upload in Progress

     * Upload failed. Please upload a file larger than 100x100 pixels
     * We are experiencing some problems, please try again.
     * You can only upload files of type PNG, JPG, or JPEG.
     * You can only upload files of type 3GP, 3GPP, MP4, MOV, AVI, MPG,
       MPEG, or RM.
     * You can only upload photos smaller than 5 MB.
     * You can only upload videos smaller than 600MB.
     * You can only upload a photo (png, jpg, jpeg) or a video (3gp, 3gpp,
       mp4, mov, avi, mpg, mpeg, rm).
     * You can only upload a photo or a video.
     * Video should be smaller than <b>600mb/5 minutes</b>
     * Photo should be smaller than <b>5mb</b>
     * Video should be smaller than <b>600mb/5 minutes</b>
       Photo should be smaller than <b>5mb</b>

Related Questions

   [140]Array sorting Java Code help?
   [141]Java array sort code?
   [142]Sorted Array List (Java Code)?
   More questions
   [143]How do i find hte median of my array of random integers after i've
   sorted it (all in java)?
   [144]Sort an array in Java?

Answer Questions

   [145]A student reports this problem when using HTML and JavaScript?
   [146]Why codecademy pro raised their price? Before it was 19.99$ but
   after I reopened my account it goes to 39.99$ What is catch?
   [147]How do character pointers work with strings in C?
   [148]"Class" in python, how will i be able to use it?

   Trending
   [149]How do I print the internet?
   16 answers
   [150]Programming and animating good for my age?
   4 answers
   [151]Whom would buy my COBOL programming services?
   4 answers
   More questions
   [152]What's the difference between a https and http?
   9 answers
   [153]Best web browser?
   306 answers
   [154]What are the must need languages for a Web Developer?
   40 answers
     * [155]Terms
     * [156]Privacy
     * [157]AdChoices
     * [158]RSS

References

   Visible links
   1. https://answers.yahoo.com/rss/question?qid=20080404114642AAmF68Y
   2. https://uk.answers.yahoo.com/question/index?qid=20080404114642AAmF68Y
   3. https://answers.yahoo.com/question/index?qid=20080404114642AAmF68Y
   4. https://sg.answers.yahoo.com/question/index?qid=20080404114642AAmF68Y
   5. https://in.answers.yahoo.com/question/index?qid=20080404114642AAmF68Y
   6. https://ca.answers.yahoo.com/question/index?qid=20080404114642AAmF68Y
   7. https://au.answers.yahoo.com/question/index?qid=20080404114642AAmF68Y
   8. https://nz.answers.yahoo.com/question/index?qid=20080404114642AAmF68Y
   9. https://ph.answers.yahoo.com/question/index?qid=20080404114642AAmF68Y
  10. https://malaysia.answers.yahoo.com/question/index?qid=20080404114642AAmF68Y
  11. https://answers.yahoo.com/question/index?qid=20080404114642AAmF68Y&page=2
  12. https://www.yahoo.com/
  13. https://mail.yahoo.com/?.intl=us&.lang=en-US&.src=ym
  14. https://search.yahoo.com/search
  15. http://news.yahoo.com/
  16. http://sports.yahoo.com/
  17. http://finance.yahoo.com/
  18. https://weather.yahoo.com/
  19. https://games.yahoo.com/
  20. https://answers.yahoo.com/
  21. https://screen.yahoo.com/
  22. https://www.flickr.com/
  23. https://mobile.yahoo.com/
  24. http://everything.yahoo.com/
  25. https://s.yimg.com/os/mit/media/m/base/images/transparent-95031.png
  26. https://www.yahoo.com/politics
  27. https://celebrity.yahoo.com/
  28. https://www.yahoo.com/movies
  29. https://www.yahoo.com/music
  30. https://www.yahoo.com/tv
  31. https://groups.yahoo.com/
  32. https://www.yahoo.com/health
  33. https://www.yahoo.com/style
  34. https://www.yahoo.com/beauty
  35. https://www.yahoo.com/food
  36. https://www.yahoo.com/parenting
  37. https://www.yahoo.com/makers
  38. https://www.yahoo.com/tech
  39. http://shopping.yahoo.com/
  40. https://www.yahoo.com/travel
  41. https://autos.yahoo.com/
  42. https://www.yahoo.com/realestate
  43. https://www.mozilla.org/firefox/new/?utm_source=yahoo&utm_medium=referral&utm_campaign=y-uh&utm_content=y-install-new-firefox
  44. https://answers.yahoo.com/
  45. https://login.yahoo.com/config/login?.src=knowsrch&.intl=us&.lang=en-US&.done=https://answers.yahoo.com/question/index?qid=20080404114642AAmF68Y
  46. https://mail.yahoo.com/?.intl=us&.lang=en-US&.src=ym
  47. https://answers.yahoo.com/question/index?qid=20080404114642AAmF68Y
  48. https://login.yahoo.com/account/personalinfo?.intl=us&.lang=en-US&.done=https://answers.yahoo.com/question/index?qid=20080404114642AAmF68Y&.src=knowsrch
  49. https://help.yahoo.com/l/us/yahoo/answers/
  50. http://suggestions.yahoo.com/?prop=answers
  51. http://yahoo.uservoice.com/forums/211240
  52. https://answers.yahoo.com/
  53. https://answers.yahoo.com/dir/index
  54. https://answers.yahoo.com/dir/index?sid=396545012
  55. https://answers.yahoo.com/dir/index?sid=396545144
  56. https://answers.yahoo.com/dir/index?sid=396545013
  57. https://answers.yahoo.com/dir/index?sid=396545311
  58. https://answers.yahoo.com/dir/index?sid=396545660
  59. https://answers.yahoo.com/dir/index?sid=396545014
  60. https://answers.yahoo.com/dir/index?sid=396545327
  61. https://answers.yahoo.com/dir/index?sid=396545015
  62. https://answers.yahoo.com/dir/index?sid=396545016
  63. https://answers.yahoo.com/dir/index?sid=396545451
  64. https://answers.yahoo.com/dir/index?sid=396545433
  65. https://answers.yahoo.com/dir/index?sid=396545367
  66. https://answers.yahoo.com/dir/index?sid=396545019
  67. https://answers.yahoo.com/dir/index?sid=396545018
  68. https://answers.yahoo.com/dir/index?sid=396545394
  69. https://answers.yahoo.com/dir/index?sid=396545401
  70. https://answers.yahoo.com/dir/index?sid=396545439
  71. https://answers.yahoo.com/dir/index?sid=396545443
  72. https://answers.yahoo.com/dir/index?sid=396545444
  73. https://answers.yahoo.com/dir/index?sid=396546046
  74. https://answers.yahoo.com/dir/index?sid=396545122
  75. https://answers.yahoo.com/dir/index?sid=396545301
  76. https://answers.yahoo.com/dir/index?sid=396545454
  77. https://answers.yahoo.com/dir/index?sid=396545213
  78. https://answers.yahoo.com/dir/index?sid=396545469
  79. https://answers.yahoo.com/dir/index?sid=396546089
  80. https://ar.answers.yahoo.com/
  81. https://au.answers.yahoo.com/
  82. https://br.answers.yahoo.com/
  83. https://ca.answers.yahoo.com/
  84. https://fr.answers.yahoo.com/
  85. https://de.answers.yahoo.com/
  86. https://in.answers.yahoo.com/
  87. https://id.answers.yahoo.com/
  88. https://it.answers.yahoo.com/
  89. https://malaysia.answers.yahoo.com/
  90. https://mx.answers.yahoo.com/
  91. https://nz.answers.yahoo.com/
  92. https://ph.answers.yahoo.com/
  93. https://qc.answers.yahoo.com/
  94. https://sg.answers.yahoo.com/
  95. https://tw.answers.yahoo.com/
  96. https://hk.answers.yahoo.com/
  97. https://es.answers.yahoo.com/
  98. https://th.answers.yahoo.com/
  99. https://uk.answers.yahoo.com/
 100. https://vn.answers.yahoo.com/
 101. https://espanol.answers.yahoo.com/
 102. https://answers.yahoo.com/info/about
 103. https://answers.yahoo.com/info/community_guidelines
 104. https://answers.yahoo.com/rank_total
 105. https://answers.yahoo.com/info/knowledge_partners
 106. https://answers.yahoo.com/info/scoring_system
 107. http://yahooanswers.tumblr.com/
 108. https://safely.yahoo.com/yahoo-answers-safety-guide-000049380.html
 109. https://mobile.yahoo.com/yahoo/?src=gta
 110. https://answers.yahoo.com/dir/index?sid=396545660&link=list
 111. https://answers.yahoo.com/dir/index?sid=396545663&link=list
 112. https://answers.yahoo.com/question/nextQuestion?lang=en-US&qs=REFERENCE&qid=20080404114642AAmF68Y&cid=396545663
 113. https://answers.yahoo.com/activity/questions?show=X4UA6VEVNU2HJRUE7FOASYN5MQ&t=g
 114. https://dmros.ysm.yahoo.com/ros/?c=cbdde9a6&w=678&h=315&ty=noscript&tt=Java sort code for an array of integers?&r=yahoo,+answers,+questions,+Computers+&+Internet,Programming+&+Design
 115. https://answers.yahoo.com/question/index?qid=20080404114642AAmF68Y&sort=V
 116. https://answers.yahoo.com/question/index?qid=20080404114642AAmF68Y&sort=N
 117. https://answers.yahoo.com/question/index?qid=20080404114642AAmF68Y&sort=O
 118. https://answers.yahoo.com/activity/questions?show=B5H5J6LD36QCYW2UCOLFCXYEJU&t=g
 119. http://www.informit.com/articles/article.aspx?p=31526&seqNum=2
 120. https://answers.yahoo.com/activity/questions?show=B5H5J6LD36QCYW2UCOLFCXYEJU&t=g
 121. https://answers.yahoo.com/activity/questions?show=YCIT6L4JTFHLDUTKRXPVOOZCRI&t=g
 122. http://en.wikipedia.org/wiki/Sorting_algorithm
 123. https://answers.yahoo.com/activity/questions?show=YCIT6L4JTFHLDUTKRXPVOOZCRI&t=g
 124. https://answers.yahoo.com/activity/questions?show=LZ35L6BR4GE6G2S536YNUAWVBU&t=g
 125. http://www.exampledepot.com/egs/java.util/coll_SortArray.html
 126. http://java.sun.com/docs/books/tutorial/collections/interfaces/collection.html
 127. https://answers.yahoo.com/activity/questions?show=LZ35L6BR4GE6G2S536YNUAWVBU&t=g
 128. https://answers.yahoo.com/activity/questions?show=CNE6IV4EYSP3NLDWLHBKSOGHDA&t=g
 129. https://answers.yahoo.com/activity/questions?show=CNE6IV4EYSP3NLDWLHBKSOGHDA&t=g
 130. https://answers.yahoo.com/info/community_guidelines
 131. https://info.yahoo.com/legal/us/yahoo/utos/terms/
 132. http://info.yahoo.com/copyright/us/details.html?pir=woxj.j1ibUnULFEIY6nyJQLxD.PLEphTPFivskb06cCK3lggdCqKTxtZqQ
 133. https://answers.yahoo.com/info/community_guidelines
 134. https://info.yahoo.com/legal/us/yahoo/utos/terms/
 135. http://info.yahoo.com/copyright/us/details.html?pir=woxj.j1ibUnULFEIY6nyJQLxD.PLEphTPFivskb06cCK3lggdCqKTxtZqQ
 136. https://answers.yahoo.com/info/community_guidelines
 137. https://info.yahoo.com/legal/us/yahoo/utos/terms/
 138. http://info.yahoo.com/copyright/us/details.html?pir=woxj.j1ibUnULFEIY6nyJQLxD.PLEphTPFivskb06cCK3lggdCqKTxtZqQ
 139. https://answers.yahoo.com/question/index?qid=20080404114642AAmF68Y
 140. https://answers.yahoo.com/question/index?qid=20100112162149AAhbYDa
 141. https://answers.yahoo.com/question/index?qid=20120719162612AA8OUeZ
 142. https://answers.yahoo.com/question/index?qid=20080228135940AAL8Knx
 143. https://answers.yahoo.com/question/index?qid=20070724231946AAjRSoC
 144. https://answers.yahoo.com/question/index?qid=20110707065125AANsQvY
 145. https://answers.yahoo.com/question/index?qid=20151103160314AAkSJxd
 146. https://answers.yahoo.com/question/index?qid=20151103162054AA3ej00
 147. https://answers.yahoo.com/question/index?qid=20151103162129AAWb6ij
 148. https://answers.yahoo.com/question/index?qid=20151103160405AALke6A
 149. https://answers.yahoo.com/question/index?qid=20151102124601AAs9jX3
 150. https://answers.yahoo.com/question/index?qid=20151103101935AAHajwV
 151. https://answers.yahoo.com/question/index?qid=20151102014041AARbBwB
 152. https://answers.yahoo.com/question/index?qid=20151102143739AACPQ0l
 153. https://answers.yahoo.com/question/index?qid=20151025203557AAeIJqx
 154. https://answers.yahoo.com/question/index?qid=20151027192650AAxD1DS
 155. https://info.yahoo.com/legal/us/yahoo/utos/terms/
 156. https://info.yahoo.com/privacy/us/yahoo/answers/details.html
 157. https://info.yahoo.com/privacy/us/yahoo/relevantads.html
 158. https://answers.yahoo.com/rss/question?qid=20080404114642AAmF68Y

   Hidden links:
 160. https://answers.yahoo.com/question/index?qid=20080404114642AAmF68Y
 161. https://answers.yahoo.com/question/index?qid=20080404114642AAmF68Y
 162. https://answers.yahoo.com/question/index?qid=20080404114642AAmF68Y
 163. https://answers.yahoo.com/question/index?qid=20080404114642AAmF68Y
 164. https://answers.yahoo.com/question/index?qid=20080404114642AAmF68Y
