   #[1]what is java? [2]alternate [3]alternate [4]alternate [5]alternate
   [6]alternate [7]alternate [8]alternate [9]alternate [10]alternate
   [11]next

   [b?s=2115300978&t=939239304]

     * [12]‚åÇHome
     * [13]Mail
     * [14]Search
     * [15]News
     * [16]Sports
     * [17]Finance
     * [18]Weather
     * [19]Games
     * [20]Answers
     * [21]Screen
     * [22]Flickr
     * [23]Mobile
     * [24]More‚ãÅ

       IFRAME:
       [25]https://s.yimg.com/os/mit/media/m/base/images/transparent-95031
       .png

          + [26]Politics
          + [27]Celebrity
          + [28]Movies
          + [29]Music
          + [30]TV
          + [31]Groups
          + [32]Health
          + [33]Style
          + [34]Beauty
          + [35]Food
          + [36]Parenting
          + [37]Makers
          + [38]Tech
          + [39]Shopping
          + [40]Travel
          + [41]Autos
          + [42]Real Estate
     * [43]Firefox Install the new Firefox ¬ª

   [44]Yahoo Answers
   ____________________
                       Search Answers Search Web
     * [45]üë§ Sign In
     * [46]‚úâ Mail
     * [47]‚öô Help
          + [48]Account Info
          + [49]Help
          + [50]Suggestions
          + [51]Send Feedback

     * [52]Answers Home

     * [53]All Categories
     * [54]Arts & Humanities
     * [55]Beauty & Style
     * [56]Business & Finance
     * [57]Cars & Transportation
     * [58]Computers & Internet
     * [59]Consumer Electronics
     * [60]Dining Out
     * [61]Education & Reference
     * [62]Entertainment & Music
     * [63]Environment
     * [64]Family & Relationships
     * [65]Food & Drink
     * [66]Games & Recreation
     * [67]Health
     * [68]Home & Garden
     * [69]Local Businesses
     * [70]News & Events
     * [71]Pets
     * [72]Politics & Government
     * [73]Pregnancy & Parenting
     * [74]Science & Mathematics
     * [75]Social Science
     * [76]Society & Culture
     * [77]Sports
     * [78]Travel
     * [79]Yahoo Products

     * International
          + [80]Argentina
          + [81]Australia
          + [82]Brazil
          + [83]Canada
          + [84]France
          + [85]Germany
          + [86]India
          + [87]Indonesia
          + [88]Italy
          + [89]Malaysia
          + [90]Mexico
          + [91]New Zealand
          + [92]Philippines
          + [93]Quebec
          + [94]Singapore
          + [95]Taiwan
          + [96]Hong Kong
          + [97]Spain
          + [98]Thailand
          + [99]UK & Ireland
          + [100]Vietnam
          + [101]Espanol
     * About
          + [102]About Answers
          + [103]Community Guidelines
          + [104]Leaderboard
          + [105]Knowledge Partners
          + [106]Points & Levels
          + [107]Blog
          + [108]Safety Tips

   [109]Get the app
   [110]Computers & Internet [111]Programming & Design
   [112]Next
   [113]ravi c

What is java?

   Follow
   6 answers 6
   Report Abuse
   Are you sure you want to delete this answer? (BUTTON) Yes (BUTTON) No

   IFRAME:
   [114]https://dmros.ysm.yahoo.com/ros/?c=cbdde9a6&w=678&h=315&ty=noscrip
   t&tt=what is
   java?&r=yahoo%2C+answers%2C+questions%2C+Computers+%26+Internet%2CProgr
   amming+%26+Design

   Sorry, something has gone wrong.

Answers

   Relevance
   [115]Rating [116]Newest [117]Oldest
   [118]Ben Ferrari
   Best Answer:  In programming, the term Java is used for
   a.) a set of libraries, specifications and tools that together form a
   software development platform.
   b.) a programming language for this platform. There are many different
   languages running on the java platform, and the Java Language is the
   one that most often used.
   wikipedia has more details on this subject:
   Java Platform:
   Java refers to a number of computer software products and
   specifications from Sun Microsystems (the Java‚Ñ¢ technology) that
   together provide a system for developing and deploying cross-platform
   applications. Java is used in a wide variety of computing platforms
   spanning from embedded devices and cell phones on the low end to
   enterprise servers and super computers on the high end. Java is fairly
   ubiquitous in cell phones, Web servers and enterprise applications, and
   somewhat less common in desktop applications, though users may have
   come across Java applets when browsing the Web.
   For years, Sun Microsystems referred to Java as the "Java technology"
   but has used the word "Java" as an adjective about the technology. In
   practice, many programmers have used the word "Java" to mean the
   programming language, while the execution platform was called the "JRE"
   (Java Runtime Environment) and the compiler-system was called the "JDK"
   (Java Development Kit), rather than a "Java compiler" as such. The word
   "Java" has often been used as an adjective, but the formal term "Java
   technology" should be noted (see history below).
   Java Language:
   Java is an object-oriented programming language developed by James
   Gosling and colleagues at Sun Microsystems in the early 1990s. Unlike
   conventional languages which are generally either designed to be
   compiled to native (machine) code, or interpreted from source code at
   runtime, Java is intended to be compiled to a bytecode (though can be
   compiled to native code with gcj) which is then run (generally using
   JIT compilation) by a Java virtual machine.
   The language itself borrows much syntax from C and C++ but has a
   simpler object model and fewer low-level facilities.
   Java is only distantly related to JavaScript, though they have similar
   names and share a C-like syntax.
   Java was started as a project called "Oak" by James Gosling in June
   1991. Gosling's goals were to implement a virtual machine and a
   language that had a familiar C-like notation but with greater
   uniformity and simplicity than C/C++. The first public implementation
   was Java 1.0 in 1995. It made the promise of "Write Once, Run Anywhere"
   (WORA), free runtimes on popular platforms. It was fairly secure and
   its security was configurable, allowing for network and file access to
   be limited. The major web browsers soon incorporated it into their
   standard configurations in a secure "applet" configuration. It became
   popular quickly. New versions for large and small platforms (J2EE and
   J2ME) soon were designed with the advent of "Java 2". Sun has not
   announced any plans for a "Java 3".
   In 1997, Sun approached the ISO/IEC JTC1 standards body and later the
   Ecma International to formalize Java, but it soon withdrew from the
   process.[1][2][3] Java remains a proprietary de facto standard that is
   controlled through the Java Community Process [4]. Sun makes most of
   its Java implementations available without charge, with revenue being
   generated by specialized products such as Java Enterprise System. Sun
   distinguishes between its Software Development Kit (SDK) and Runtime
   Environment (JRE) which is a subset of the SDK, the primary distinction
   being that the compiler is not present.
   There were five primary goals in the creation of the Java language:
   1. It should use the object-oriented programming methodology.
   2. It should allow the same program to be executed on multiple
   operating systems.
   3. It should contain built-in support for using computer networks.
   4. It should be designed to execute code from remote sources securely.
   5. It should be easy to use by selecting what was considered the good
   parts of other object-oriented languages.
   To achieve the goals of networking support and remote code execution,
   Java programmers sometimes find it necessary to use extensions such as
   CORBA, Internet Communications Engine, or OSGi.
   The first characteristic, object orientation ("OO"), refers to a method
   of programming and language design. Although there are many
   interpretations of OO, one primary distinguishing idea is to design
   software so that the various types of data it manipulates are combined
   together with their relevant operations. Thus, data and code are
   combined into entities called objects. An object can be thought of as a
   self-contained bundle of behavior (code) and state (data). The
   principle is to separate the things that change from the things that
   stay the same; often, a change to some data structure requires a
   corresponding change to the code that operates on that data, or vice
   versa. This separation into coherent objects provides a more stable
   foundation for a software system's design. The intent is to make large
   software projects easier to manage, thus improving quality and reducing
   the number of failed projects.
   Another primary goal of OO programming is to develop more generic
   objects so that software can become more reusable between projects. A
   generic "customer" object, for example, should in theory have roughly
   the same basic set of behaviors between different software projects,
   especially when these projects overlap on some fundamental level as
   they often do in large organizations. In this sense, software objects
   can hopefully be seen more as pluggable components, helping the
   software industry build projects largely from existing and well-tested
   pieces, thus leading to a massive reduction in development times.
   Software reusability has met with mixed practical results, with two
   main difficulties: the design of truly generic objects is poorly
   understood, and a methodology for broad communication of reuse
   opportunities is lacking. Some open source communities want to help
   ease the reuse problem, by providing authors with ways to disseminate
   information about generally reusable objects and object libraries.
   '''Java''' is an [[Object-oriented programming|object-oriented]]
   [[programming language]] developed by [[James Gosling]] and colleagues
   at [[Sun Microsystems]] in the early 1990s. Unlike conventional
   languages which are generally either designed to be compiled to native
   (machine) code, or interpreted from [[source code]] at [[runtime]],
   Java is intended to be compiled to a [[Byte-code|bytecode]] (though can
   be compiled to native code with [[gcj]]) which is then run (generally
   using [[JIT compilation]]) by a [[Java virtual machine]].
   The language itself borrows much syntax from [[C programming
   language|C]] and [[C++]] but has a simpler object model and fewer
   low-level facilities.
   Java is only distantly related to [[JavaScript]], though they have
   similar names and share a [[C programming language|C]]-like
   [[Syntax#Syntax in computer science|syntax]].
   ==History==
   Java was started as a project called "Oak" by James Gosling in June
   1991. Gosling's goals were to implement a [[virtual machine]] and a
   language that had a familiar C-like notation but with greater
   uniformity and simplicity than C/C++. The first public implementation
   was Java 1.0 in 1995. It made the promise of "[[Write once, run
   anywhere|Write Once, Run Anywhere]]" (WORA), free runtimes on popular
   platforms. It was fairly secure and its security was configurable,
   allowing for network and file access to be limited. The major web
   browsers soon incorporated it into their standard configurations in a
   secure "applet" configuration. It became popular quickly. New versions
   for large and small platforms (J2EE and J2ME) soon were designed with
   the advent of "Java 2". Sun has not announced any plans for a "Java 3".
   In 1997, Sun approached the ISO/IEC JTC1 standards body and later the
   [[Ecma International]] to formalize Java, but it soon withdrew from the
   process.<ref>[[119]http://www.open-std.org/JTC1/SC22/JSG/ Java Study
   Group]</ref><ref>[http://csdl2.computer.... Why Java‚Ñ¢ Was - Not -
   Standardized Twice]</ref><ref>[http://techupdate.zdne... What is
   ECMA--and why Microsoft cares]</ref> Java remains a proprietary de
   facto standard that is controlled through the Java Community Process
   <ref>[[120]http://www.jcp.org/en/home/index Java Community Process
   website]</ref>. Sun makes most of its Java implementations available
   without charge, with revenue being generated by specialized products
   such as Java Enterprise System. Sun distinguishes between its Software
   Development Kit (SDK) and [[HotSpot|Runtime Environment (JRE)]] which
   is a subset of the SDK, the primary distinction being that the compiler
   is not present.
   == Philosophy ==
   There were five primary goals in the creation of the Java language:
   # It should use the [[object-oriented programming]] methodology.
   # It should allow the same program to be executed on multiple operating
   systems.
   # It should contain built-in support for using [[computer network]]s.
   # It should be designed to execute code from remote sources securely.
   # It should be easy to use by selecting what was considered the good
   parts of other object-oriented languages.
   To achieve the goals of networking support and remote code execution,
   Java programmers sometimes find it necessary to use extensions such as
   [[CORBA]], [[Internet Communications Engine]], or [[OSGi]].
   === Object orientation ===
   The first characteristic, [[object-oriented programming|object
   orientation]] ("OO"), refers to a method of programming and language
   design. Although there are many interpretations of OO, one primary
   distinguishing idea is to design software so that the various types of
   data it manipulates are combined together with their relevant
   operations. Thus, data and code are combined into entities called
   [[Object (computer science)|objects]]. An object can be thought of as a
   self-contained bundle of ''behavior'' (code) and ''state'' (data). The
   principle is to separate the things that change from the things that
   stay the same; often, a change to some data structure requires a
   corresponding change to the code that operates on that data, or vice
   versa. This separation into coherent objects provides a more stable
   foundation for a software system's design. The intent is to make large
   software projects easier to manage, thus improving quality and reducing
   the number of failed projects.
   Another primary goal of OO programming is to develop more generic
   objects so that software can become more reusable between projects. A
   generic "customer" object, for example, should in theory have roughly
   the same basic set of behaviors between different software projects,
   especially when these projects overlap on some fundamental level as
   they often do in large organizations. In this sense, software objects
   can hopefully be seen more as pluggable [[software
   componentry|components]], helping the software industry build projects
   largely from existing and well-tested pieces, thus leading to a massive
   reduction in development times. Software reusability has met with mixed
   practical results, with two main difficulties: the design of truly
   generic objects is poorly understood, and a methodology for broad
   communication of reuse opportunities is lacking. Some [[Open
   source#Innovation communities|open source communities]] want to help
   ease the reuse problem, by providing authors with ways to disseminate
   information about generally reusable objects and object libraries.
   === Platform independence ===
   [[Image:SwingSet.png|thumb|The [[look and feel]] of Java Swing
   [[Graphical user interface|GUI]]s is independent of the platform on
   which they are running]]
   The second characteristic, [[Cross-platform|platform independence]],
   means that [[computer program|program]]s written in the Java language
   must run similarly on diverse hardware. One should be able to write a
   program once and run it anywhere.
   This is achieved by most Java [[compiler]]s by compiling the Java
   language code "halfway" to [[bytecode]] (specifically [[Java
   bytecode]])‚Äîsimplified machine instructions specific to the Java
   platform. The code is then run on a [[virtual machine]] (VM), a program
   written in native code on the host hardware that [[Interpreter
   (computing)|interprets]] and executes generic Java bytecode. Further,
   standardized libraries are provided to allow access to features of the
   host machines (such as graphics, [[thread (computer
   science)|threading]] and [[Computer network|networking]]) in unified
   ways. Note that, although there's an explicit compiling stage, at some
   point, the Java bytecode is interpreted or converted to native
   [[assembly language|machine instructions]] by the [[Just-in-time
   compilation|JIT compiler]].
   There are also implementations of Java compilers that compile to native
   [[object code]], such as [[GCJ]], removing the intermediate bytecode
   stage, but the output of these compilers can only be run on a single
   [[Computer architecture|architecture]].
   Sun's license for Java insists that all implementations be
   "compatible". This resulted in a legal dispute with Microsoft after Sun
   claimed that the Microsoft implementation did not support the RMI and
   JNI interfaces and had added platform-specific features of their own.
   Sun sued and won both damages (some $20 million) and a court order
   enforcing the terms of the license from Sun. In response, Microsoft no
   longer ships Java with Windows, and in recent versions of Windows,
   Internet Explorer cannot support Java applets without a third-party
   plugin. However, Sun and others have made available Java run-time
   systems at no cost for those and other versions of Windows.
   The first implementations of the language used an interpreted virtual
   machine to achieve [[Porting|portability]]. These implementations
   produced programs that ran more slowly than programs compiled to native
   executables, for instance written in C or C++, so the language suffered
   a reputation for poor performance. More recent JVM implementations
   produce programs that run significantly faster than before, using
   multiple techniques.
   The first technique is to simply compile directly into native code like
   a more traditional compiler, skipping bytecodes entirely. This achieves
   good performance, but at the expense of portability. Another technique,
   known as ''just-in-time compilation'' (JIT), translates the Java
   bytecodes into native code at the time that the program is run which
   results in a program that executes faster than interpreted code but
   also incurs [[compilation overhead]] during execution. More
   sophisticated VMs use ''[[dynamic recompilation]]'', in which the VM
   can analyze the behavior of the running program and selectively
   recompile and optimize critical parts of the program. Dynamic
   recompilation can achieve optimizations superior to static compilation
   because the dynamic compiler can base optimizations on knowledge about
   the runtime environment and the set of loaded classes. JIT compilation
   and dynamic recompilation allow Java programs to take advantage of the
   speed of native code without losing portability.
   Portability is a technically difficult goal to achieve, and Java's
   success at that goal has been mixed. Although it is indeed possible to
   write programs for the Java platform that behave consistently across
   many host platforms, the large number of available platforms with small
   errors or inconsistencies led some to parody Sun's "[[Write once, run
   anywhere]]" slogan as "Write once, [[debug]] everywhere".
   Platform-independent Java is however very successful with server-side
   applications, such as [[Web service]]s, [[servlet]]s, and [[Enterprise
   JavaBean]]s, as well as with [[Embedded system]]s based on [[OSGi]],
   using [[Embedded Java]] environments.
   === Automatic garbage collection ===
   One idea behind Java's automatic memory management model is that
   programmers should be spared the burden of having to perform manual
   [[memory management]]. In some languages the programmer allocates
   memory to create any object stored on the [[heap (programming)|heap]]
   and is responsible for later manually deallocating that memory to
   delete any such objects. If a programmer forgets to deallocate memory
   or writes code that fails to do so in a timely fashion, a [[memory
   leak]] can occur: the program will consume a potentially arbitrarily
   large amount of memory. In addition, if a region of memory is
   deallocated twice, the program can become unstable and may crash.
   Finally, in non garbage collected environments, there is a certain
   degree of overhead and complexity of user-code to track and finalize
   allocations. Often developers may box themselves into certain designs
   to provide reasonable assurances that memory leaks will not occur.
   In Java, this potential problem is avoided by [[garbage collection
   (computer science)|automatic garbage collection]]. The programmer
   determines when objects are created, and the Java runtime is
   responsible for managing the [[Object lifetime|object's lifecycle]].
   The program or other objects can reference an object by holding a
   reference to it (which, from a low-level point of view, is its address
   on the heap). When no references to an object remain, the Java garbage
   collector automatically deletes the [[unreachable object]], freeing
   memory and preventing a memory leak. Memory leaks may still occur if a
   programmer's code holds a reference to an object that is no longer
   needed‚Äîin other words, they can still occur but at higher conceptual
   levels.
   The use of garbage collection in a language can also affect programming
   paradigms. If, for example, the developer assumes that the cost of
   memory allocation/recollection is low, they may choose to more freely
   construct objects instead of pre-initializing, holding and reusing
   them. With the small cost of potential performance penalities
   (inner-loop construction of large/complex objects), this facilitates
   thread-isolation (no need to synchronize as different threads work on
   different object instances) and data-hiding. The use of transient
   immutable value-objects minimizes side-effect programming.
   Comparing Java and [[C++]], it is possible in C++ to implement similar
   functionality (for example, a memory management model for specific
   classes can be designed in C++ to improve speed and lower memory
   fragmentation considerably), with the possible cost of extra
   development time and some application complexity. In Java, garbage
   collection is built-in and virtually invisible to the developer. That
   is, developers may have no notion of when garbage collection will take
   place as it may not necessarily correlate with any actions being
   explicitly performed by the code they write. Depending on intended
   application, this can be beneficial or diadvantageous: the programmer
   is freed from performing low-level tasks, but at the same time loses
   the option of writing lower level code.
   == Syntax ==
   {{Main|Java syntax}}
   The syntax of Java is largely derived from C++. However, unlike C++,
   which combines the syntax for structured, generic, and object-oriented
   programming, Java was built from the ground up to be virtually fully
   object-oriented: everything in Java is an object with the exceptions of
   atomic datatypes (ordinal and real numbers, boolean values, and
   characters) and everything in Java is written inside a class.
   === Hello world ===
   :''For an explanation of the tradition of programming "Hello World"
   see: [[Hello world program]].''
   ==== Stand-alone application ====
   // Hello.java
   public class Hello {
   public static void main(String[] args) {
   System.out.println("Hello, world!");
   }
   }
   This is a minimal usage of the JVM, but it does not demonstrate
   object-oriented programmming very well. No object is explicitly created
   in the above example since the keyword ''new'' is never used. The class
   "Hello" merely provides a namespace for the static "main" routine.
   Technically, the object System.out is used, but it is implicitly
   created by the JVM before the main routine is called.
   ==== Applet ====
   {{Main|Java applet}}
   Java applets are programs that are embedded in other applications,
   typically in a Web page displayed in a [[Web browser]].
   // Hello.java
   import java.applet.Applet;
   import java.awt.Graphics;
   public class Hello extends Applet {
   public void paint(Graphics gc) {
   gc.drawString("Hello, world!", 65, 95);
   }
   }
   This applet will simply draw the string "Hello, world!" in the
   rectangle within which the applet will run. This is a slightly better
   example of using Java's OO features in that the class explicitly
   extends the basic "Applet" class, that it overrides the "paint" method
   and that it uses <code>import</code> statements.
   <!-- Hello.html -->
   <html>
   <head>
   <title>Hello World Applet</title>
   </head>
   <body>
   <applet code="Hello" width="200" height="200">
   </applet>
   </body>
   </html>
   An applet is placed in an [[HTML]] document using the
   '''<code><applet></code>''' [[HTML element]]. The <code>applet</code>
   tag has three attributes set: '''<code>code="Hello"</code>''' specifies
   the name of the <code>Applet</code> class and '''<code>width="200"
   height="200"</code>''' sets the pixel width and height of the applet.
   (Applets may also be embedded in HTML using either the
   <code>object</code> or <code>embed</code> element, although support for
   these elements by Web browsers is
   inconsistent.[[121]http://java.sun.com/docs/books/tutorial/...
   ==== Servlet ====
   {{Main|Java Servlet}}
   Java servlets are [[server-side]] Java EE components that generate
   responses to requests from [[client (computing)|client]]s.
   // Hello.java
   import java.io.*;
   import javax.servlet.*;
   public class Hello extends GenericServlet {
   public void service(ServletRequest request, ServletResponse response)
   throws ServletException, IOException
   {
   response.setContentType("text/html");
   PrintWriter pw = response.getWriter();
   pw.println("Hello, world!");
   pw.close();
   }
   }
   The '''<code>import</code>''' statements direct the Java compiler to
   include all of the public classes and [[interface (Java)|interfaces]]
   from the '''{{Javadoc:SE|package=java.io|java/io}... and
   '''{{Javadoc:EE|package=javax.servlet|ja... [[Java package|packages]]
   in the compilation.
   The <code>'''Hello'''</code> class <code>'''extends'''</code> the
   '''{{Javadoc:EE|javax/servlet|GenericSer... class; the
   <code>GenericServlet</code> class provides the interface for the
   [[server (computing)|server]] to forward requests to the servlet and
   control the servlet's lifecycle.
   The <code>Hello</code> class overrides the
   '''{{Javadoc:EE|name=service(ServletRequ...
   ServletResponse)|javax/servlet|Servlet|s... method defined by the
   {{Javadoc:EE|javax/servlet|Servlet}} [[Interface (Java)|interface]] to
   provide the code for the service request handler. The
   <code>service()</code> method is passed a
   '''{{Javadoc:EE|javax/servlet|ServletReq... object that contains the
   request from the client and a
   '''{{Javadoc:EE|javax/servlet|ServletRes... object used to create the
   response returned to the client. The <code>service()</code> method
   declares that it <code>'''throws'''</code> the [[exception
   handling|exceptions]] {{Javadoc:EE|javax/servlet|ServletExcept... and
   {{Javadoc:SE|java/io|IOException}} if a problem prevents it from
   responding to the request.
   The '''{{Javadoc:EE|name=setContentType(Stri... method in the response
   object is called to set the [[MIME]] content type of the returned data
   to '''"text/html"'''. The '''{{Javadoc:EE|name=getWriter()|javax/s...
   method in the response returns a
   '''{{Javadoc:SE|java/io|PrintWriter}}''' object that is used to write
   the data that is sent to the client. The
   '''{{Javadoc:SE|name=println(String)|jav... method is called to write
   the '''"Hello, world!"''' string to the response and then the
   '''{{Javadoc:SE|name=close()|java/io|Pri... method is called to close
   the print writer, which causes the data that has been written to the
   stream to be returned to the client.
   ==== Swing application ====
   [[Swing (Java)|Swing]] is the advanced graphical user interface
   [[library (computer science)|library]] for the Java SE platform.
   // Hello.java
   import javax.swing.*;
   public class Hello extends JFrame {
   Hello() {
   setDefaultCloseOperation(WindowConstants...
   add(new JLabel("Hello, world!"));
   pack();
   }
   public static void main(String[] args) {
   new Hello().setVisible(true);
   }
   }
   The '''<code>import</code>''' statement directs the Java compiler to
   include all of the public classes and interfaces from the
   '''{{Javadoc:SE|package=javax.swing|java... package in the compilation.
   The <code>'''Hello'''</code> class <code>'''extends'''</code> the
   '''{{Javadoc:SE|javax/swing|JFrame}}''' class; the <code>JFrame</code>
   class implements a [[window (computing)|window]] with a [[title bar]]
   with a close [[Widget (computing)|control]].
   The <code>'''Hello()'''</code> [[constructor (computer
   science)|constructor]] initializes the frame by first calling the
   '''{{Javadoc:SE|name=setDefaultCloseOper... method inherited from
   <code>JFrame</code> to set the default operation when the close control
   on the title bar is selected to
   <code>'''{{Javadoc:SE|javax/swing|Window... causes the
   <code>JFrame</code> to be disposed of when the frame is closed (as
   opposed to merely hidden), which allows the JVM to exit and the program
   to terminate. Next a '''<code>new
   </code>{{Javadoc:SE|javax/swing|JLabel}}... is created for the string
   '''"Hello, world!"''' and the
   '''{{Javadoc:SE|name=add(Component)|java... method inherited from the
   {{Javadoc:SE|java/awt|Container}} superclass is called to add the label
   to the frame. The '''{{Javadoc:SE|name=pack()|java/awt|Win... method
   inherited from the {{Javadoc:SE|java/awt|Window}} superclass is called
   to size the window and [[layout]] its contents.
   The <code>'''main()'''</code> method is called by the JVM when the
   program starts. It [[Instance (programming)|instantiates]] a
   '''<code>new Hello</code>''' frame and causes it to be displayed by
   calling the '''{{Javadoc:SE|name=setVisible(boolean)... method
   inherited from the {{Javadoc:SE|java/awt|Component}} superclass with
   the boolean parameter <code>'''true'''</code>. Note that once the frame
   is displayed, exiting the <code>main</code> method does not cause the
   program to terminate because the AWT [[event dispatching thread]]
   remains active until all of the Swing top-level windows have been
   disposed.
   == Criticism ==
   {{main article|Java criticisms}}
   Java was intended to serve as a novel way to manage software
   complexity. Most consider Java technology to deliver reasonably well on
   this promise. Java does not universally accommodate all programming
   styles or environments. See [[Java criticisms]] for a thorough analysis
   of common criticisms about the language.
   ===Performance===
   Partly due to the early versions of the language, Java has often been
   perceived as significantly slower, and more memory-consuming, than
   natively compiled languages such as [[C programming language|C]] or
   [[C++]]. Performance has increased substantially since then, and
   relative performance of [[JIT compiler]]s as compared to native
   compilers has in tests been shown to be quite similar.{{cn}} However,
   these claims and the performed tests are common subjects of debate and
   controversy.
   ===Look and feel===
   The default [[look and feel]] of [[Graphical User Interface|GUI]]
   applications written in Java using the [[Swing (Java)|Swing]] toolkit
   is very different from native applications. It is possible to specify a
   different look and feel through the [[pluggable look and feel]] system
   of Swing. Clones of [[Microsoft Windows|Windows]], [[GTK]] and [[Motif
   (widget toolkit)|Motif]] are supplied by Sun. [[Apple Computer|Apple]]
   also provides an [[Aqua (theme)|Aqua]] look and feel for [[Mac OS X]].
   Though prior implementations of these look and feels have been
   considered lacking, Swing in Java SE 6 addresses this problem by using
   more native [[Widget (computing)|widget]] drawing routines of the
   underlying platforms. Alternatively, third party toolkits such as
   [[wx4j]] or [[Standard Widget Toolkit|SWT]] may be used for increased
   integration with the native windowing system.
   ===Lack of OO purity===
   Java's primitive types are not objects. Primitive types hold their
   values in the [[Stack-based memory allocation|stack]] rather than being
   references to values. This was a conscious decision by Java's designers
   for performance reasons. Because of this, Java is not considered to be
   a pure object-oriented programming language. However, as of Java 5.0,
   [[autoboxing]] enables programmers to write as if primitive types are
   their wrapper classes, and freely interchange between them for improved
   flexibility.
   Java designers decided not to implement certain features present in
   other OO languages, including:
   * multiple inheritance
   * operator overloading
   * class properties
   * tuples
   ===Single-paradigm language===
   Java is predominantly a single-[[programming paradigm|paradigm]]
   language. However, with the addition of ''static imports'' in Java 5.0
   the procedural paradigm is better accommodated than in earlier versions
   of Java.
   == Resources ==
   === Java Runtime Environment ===
   The '''[[Java Runtime Environment]]''' or '''JRE''' is the software
   required to run any [[Application software|application]] deployed on
   the Java Platform. [[End-user]]s commonly use a JRE in [[software
   package]]s and Web browser [[plugin]]s. Sun also distributes a superset
   of the JRE called the Java 2 [[SDK]] (more commonly known as the JDK),
   which includes development tools such as the Java [[compiler]],
   [[Javadoc]], and [[debugger]].
   ==== Components ====
   * Java [[Library (computer science)|libraries]] that are the compiled
   [[byte code]]s of [[source code]] developed by the JRE implementor to
   support application development in Java. Examples of these libraries
   are:
   ** The core libraries, which include:
   *** Collection libraries which implement [[data structure]]s such as
   [[List (computing)|lists]], [[associative array|dictionaries]], [[tree
   structure|trees]] and [[Set (computer science)|sets]]
   *** [[XML]] [[Parsing]] libraries
   *** Security
   *** [[i18n|Internationalization and localization]] libraries
   ** The integration libraries, which allow the application writer to
   communicate with external systems. These libraries include:
   *** The [[Java Database Connectivity]] (JDBC) [[Application Programming
   Interface|API]] for database access
   *** [[Java Naming and Directory Interface]] (JNDI) for lookup and
   discovery
   *** [[Java remote method invocation|RMI]] and [[CORBA]] for distributed
   application development
   ** [[User Interface]] libraries, which include:
   *** The (heavyweight, or [[native mode|native]]) [[Abstract Windowing
   Toolkit]] (AWT), which provides [[graphical user interface|GUI]]
   components, the means for laying out those components and the means for
   handling events from those components
   *** The (lightweight) [[Swing (Java)|Swing]] libraries, which are built
   on AWT but provide (non-native) implementations of the AWT widgetry
   *** APIs for audio capture, processing, and playback
   * A platform dependent implementation of [[Java virtual machine]] (JVM)
   which is the means by which the byte codes of the Java libraries and
   third party applications are executed
   * Plugins, which enable [[Java applet|applet]]s to be run in [[Web
   browser]]s
   * [[Java Web Start]], which allows Java applications to be efficiently
   distributed to [[end user]]s across the [[Internet]]
   * Licensing and documentation
   === APIs ===
   Sun has defined three platforms targeting different application
   environments and segmented many of its [[application programming
   interface|API]]s so that they belong to one of the platforms. The
   platforms are:
   * [[Java Platform, Micro Edition]] (Java ME) ‚Äî targeting environments
   with limited resources,
   * [[Java Platform, Standard Edition]] (Java SE) ‚Äî targeting workstation
   environments, and
   * [[Java Platform, Enterprise Edition]] (Java EE) ‚Äî targeting large
   distributed enterprise or Internet environments.
   The [[Class (computer science)|classes]] in the Java APIs are organized
   into separate groups called [[Java package|packages]]. Each package
   contains a set of related [[Interface (Java)|interface]]s, classes and
   [[exception handling|exceptions]]. Refer to the separate platforms for
   a description of the packages available.
   The set of APIs is controlled by Sun Microsystems in cooperation with
   others through the [[Java Community Process]] program. Companies or
   individuals participating in this process can influence the design and
   development of the APIs. This process has been a subject of
   controversy.
   In 2004, IBM and BEA publicly supported the notion of creating an
   official open source implementation of Java. [[As of 2006]], Sun has
   agreed that they will eventually open source Java; when and how are
   still to be defined.
   === Extensions and related architectures ===
   <!------------------------------------...
   Only list extensions and APIs developed under the Java Community
   Process here.
   --------------------------------------...
   The [[Extension (computing)|extensions]] to standard Java are typically
   in <code>javax.*</code> packages. They are not included in the JDK or
   JRE. Extensions and architectures closely tied to the Java programming
   language include:
   * [[Java Platform, Enterprise Edition|Java EE]] (previously J2EE) (Java
   Platform, Enterprise Edition‚Äîfor distributed enterprise applications)
   * [[Java Platform, Micro Edition|Java ME]] (previously J2ME) (Java
   Platform, Micro Edition‚Äîfor PDAs and cellular phones)
   * [[JMF]] (Java Media Framework)
   * [[JNDI]] (Java Naming and Directory Interface)
   * [[JSML]] (Java Speech API Markup Language)
   * [[JDBC]] (Java Database Connectivity)
   * [[Java Data Objects|JDO]] (Java Data Objects)
   * [[Java Advanced Imaging|JAI]] (Java Advanced Imaging)
   * [[JAIN]] (Java API for Integrated Networks)
   * [[JDMK]] (Java Dynamic Management Kit)
   * [[Jini]] (a network architecture for the construction of
   [[federated]] [[distributed system]]s)
   * [[Jiro]]
   * [[Java Card]] (Java for [[smart cards]])
   * [[JavaSpaces]]
   * [[Java Modeling Language|JML]] (Java Modeling Language)
   * [[Java Metadata Interface|JMI]] (Java Metadata Interface)
   * [[Java Management Extensions|JMX]] (Java Management Extensions)
   * [[JavaServer Pages|JSP]] (JavaServer Pages)
   * [[JavaServer Faces|JSF]] (JavaServer Faces)
   * [[Java Native Interface|JNI]] (Java Native Interface)
   * [[JXTA]] (Open Protocols for [[Peer-to-Peer]] (P2P) Virtual Network)
   * [[Java 3D]] (A high level API for 3D graphics programming)
   * [[Java OpenGL|JOGL]] (Java OpenGL‚ÄîA low level API for 3D graphics
   programming, using [[OpenGL]])
   * [[Lightweight Java Game Library|LWJGL]] (Light Weight Java Game
   Library‚ÄîA low level API providing access to [[OpenGL]], [[OpenAL]] and
   various input devices)
   * [[OSGi]] (Dynamic Service Management and Remote Maintenance)
   <!------------------------------------...
   Only list extensions and APIs developed under the Java Community
   Process above.
   --------------------------------------...
   == See also ==
   * [[Java syntax]]
   * [[Java keywords]]
   * [[Java virtual machine]]
   * [[Java platform]]
   * [[Java applet]]
   * [[Classpath (Java)]]
   * [[Java Platform, Standard Edition]] (Java SE, J2SE)
   * [[JavaOS]]
   * [[Comparison of Java and C++]]
   * [[Comparison of C Sharp and Java|Comparison of C# and Java]]
   * [[Comparison of programming languages]]
   * [[Java User Group]]
   * [[Java Community Process]]
   * [[JavaOne]]
   * [[Join Java|Join Java programming language]]
   * [[Javapedia]]
   == Books about Java ==
   [[Image:Zakhour_java.jpg|thumb|right|T... Java Tutorial, Fourth
   Edition]]
   * ''The Java Tutorial, Fourth Edition'', Sharon Zakhour, Addison-Wesley
   Professional, Sep. 29, 2006. ISBN 0-321-33420-5
   === Lists ===
   * [[List of Java scripting languages]]
   * [[:Category:Java platform software|Java platform software]]
   * [[:Category:Java tools|Java development tools]]
   * [[List of Java virtual machines]]
   ==Notes==
   <references />
   == References ==
   <div class="references-small">
   * Jon Byous, [http://java.sun.com/features/1998/05/birthday.html ''Java
   technology: The early years'']. Sun Developer Network, no date [ca.
   1998]. Retrieved [[April 22]], [[2005]].
   * [[James Gosling]], [http://today.java.net/jag/old/green/ ''A brief
   history of the Green project'']. Java.net, no date [ca. Q1/1998].
   Retrieved [[April 22]], [[2005]].
   * [[James Gosling]], [[Bill Joy]], [[Guy L. Steele, Jr.|Guy Steele]],
   and [[Gilad Bracha]], ''The Java language specification'', third
   edition. Addison-Wesley, 2005. ISBN 0-321-24678-0 (see also
   [http://java.sun.com/docs/books/jls/index.html online edition of the
   specification].
   * Tim Lindholm and Frank Yellin. ''The Java Virtual Machine
   specification'', second edition. Addison-Wesley, 1999. ISBN
   0-201-43294-3.
   </div>
   == External links ==
   {{Wikibooks|Java Programming}}
   === Sun ===
   * [http://java.sun.com/ Official Java home site for IT, developers,
   etc]
   * [http://www.java.com/ Official Java home site non-technical /
   home-use]
   * [http://java.sun.com/docs/books/jls/ The Java Language Specification,
   Third Edition] Authoritative description of the Java language (also
   available
   [http://java.sun.com/docs/books/jls/third_edition/html/j3TOC.html
   online])
   * {{Javadoc:SE}}
   * [http://java.sun.com/docs/books/tutorial/ Sun's tutorial on Java
   Programming]
   * [http://java.sun.com/docs/white/langenv/ Original Java whitepaper],
   1996
   * [http://www.java.com/en/download/help/testvm.xml Test your Java VM]
   === [[Java Specification Request]]s ===
   There are several JSRs related to the Java Language and core API
   packages.
   * [http://www.jcp.org/en/jsr/detail?id=14 JSR 14] ''Add [[Generic
   programming|Generic Types]] To The Java Programming Language'' (J2SE
   5.0)
   * [http://www.jcp.org/en/jsr/detail?id=41 JSR 41] ''A Simple Assertion
   Facility'' (J2SE 1.4)
   * [http://www.jcp.org/en/jsr/detail?id=47 JSR 47] ''Logging API
   Specification'' (J2SE 1.4)
   * [http://www.jcp.org/en/jsr/detail?id=51 JSR 51] ''[[New I/O]] APIs
   for the Java Platform'' (J2SE 1.4)
   * [http://www.jcp.org/en/jsr/detail?id=59 JSR 59] ''J2SE Merlin Release
   Contents'' (J2SE 1.4)
   * [http://www.jcp.org/en/jsr/detail?id=131 JSR 121] ''[[Application
   Isolation API]]'' (not yet included)
   * [http://www.jcp.org/en/jsr/detail?id=133 JSR 133] ''Java Memory Model
   and Thread Specification Revision'' (J2SE 5.0)
   * [http://www.jcp.org/en/jsr/detail?id=166 JSR 166] ''Concurrency
   Utilities'' (J2SE 5.0)
   * [http://www.jcp.org/en/jsr/detail?id=175 JSR 175] ''[[A Metadata
   Facility for the Java Programming Language]]'' (J2SE 5.0)
   * [http://www.jcp.org/en/jsr/detail?id=176 JSR 176] ''J2SE 5.0 (Tiger)
   Release Contents'' (J2SE 5.0)
   * [http://www.jcp.org/en/jsr/detail?id=201 JSR 201] ''Extending the
   Java Programming Language with Enumerations, Autoboxing, Enhanced for
   loops and Static Import'' (J2SE 5.0)
   * [http://www.jcp.org/en/jsr/detail?id=203 JSR 203] ''More New I/O APIs
   for the Java Platform ("NIO.2")'' (Java SE 7)
   * [http://www.jcp.org/en/jsr/detail?id=204 JSR 204] ''Unicode
   Supplementary Character Support'' (J2SE 5.0) ‚Äì support for [[Unicode]]
   3.1
   * [http://www.jcp.org/en/jsr/detail?id=270 JSR 270] ''Java SE 6
   ("Mustang") Release Contents'' (Java SE 6)
   * [http://www.jcp.org/en/jsr/detail?id=275 JSR 275] ''Physical
   Units/Quantities Support (Java SE) (reference implementation from
   [[JScience]])
   * [http://www.jcp.org/en/jsr/detail?id=901 JSR 901] ''Java Language
   Specification'' (J2SE 5.0)
   === Resources ===
   * [http://www.computer-books.us/java.php Computer-Books.us] A
   collection of Java books available for free download
   * [http://wiki.java.net/bin/view/Javapedia/ Javapedia project]
   * [http://wiki.java.net/bin/view/Main/WebHome The Java.net Wiki]
   * [http://www.inesystems.com Sun Certification Resource]
   * [http://www.javarss.com/ JavaRSS.com] Portal of Java websites
   * [http://www.ibm.com/developerworks/java?ca=dgr-wikia-dW-JavaHP
   developerWorks Java Zone‚ÄîJava resource community]
   * [http://www.javawhat.com/ JavaWhat.com] Java resource directory
   * [http://www.codecodex.com/wiki/index.php?title=Category:Java Java at
   CodeCodex] A wiki collection of Java source code
   === Java Integrated Development Environments ===
   The following [[Integrated Development Environment]]s (IDEs) can be
   used to create Java programs.
   <!-- Please keep the IDEs listed in alphabetical order. --->
   *
   [http://www.bea.com/framework.jsp?CNT=index.htm&FP=/content/products/wo
   rkshop/ BEA Workshop] ‚Äì commercial software, developed by [[BEA
   Systems]], integrates with [[BEA WebLogic]]
   * [http://www.bluej.org/ BlueJ] ‚Äì [[free software]] developed as a
   joint university research project, [[BlueJ]] is also an interactive
   development environment suitable for learning Java
   * [http://www.drjava.org/ DrJava] free [[open source]] software
   * [http://www.eclipse.org/ Eclipse] ‚Äì free [[open source]] software,
   [[Eclipse (software)|Eclipse]] is developed by the [[Eclipse
   Foundation]]
   * [http://www.jetbrains.com/idea/ IntelliJ IDEA] ‚Äì commercial software,
   [[IntelliJ IDEA]] is developed by [[JetBrains]]
   * [http://www.borland.com/us/products/jbuilder/index.html JBuilder] ‚Äì
   commercial software (free version available), [[JBuilder]] is developed
   by [[Borland]]
   * [http://www.jcreator.com/ JCreator] ‚Äì commercial software (free
   version available), [[JCreator]] is developed by Xinox Software
   * [http://www.oracle.com/tools/jdev_home.html JDeveloper] ‚Äì free
   software [[JDeveloper]] is developed by [[Oracle Corporation]] and
   integrates with [[Oracle Application Server]]
   * [http://www.netbeans.org/ NetBeans] ‚Äì free open source software
   developed by [[NetBeans|NetBeans.org]]
   * [http://developers.sun.com/prodtech/javatools/jsenterprise/index.html
   Sun Java Studio Enterprise] ‚Äì commercial software (available free to
   members of the free Sun Developer Network), developed by Sun
   Microsystems
   *
   [http://www-306.ibm.com/software/websphere/sw-bycategory/subcategory/SW
   710.html WebSphere Developer & Development Studio] ‚Äì commercial
   software, developed by [[IBM]], integrates with [[WebSphere Application
   Server]]
   === History ===
   * [http://java.sun.com/features/1998/05/birthday.html Java‚Ñ¢ Technology:
   The Early Years]
   * [http://java.sun.com/people/jag/green/ A Brief History of the Green
   Project]
   * [http://www.cs.umd.edu/users/seanl/stuff/java-objc.html Java Was
   Strongly Influenced by Objective-C]
   * [http://www.wired.com/wired/archive/3.12/java.saga.html The Java
   Saga]
   * [http://java.sun.com/features/2000/06/time-line.html The Java
   Platform: Five Years in Review]
   * [http://ei.cs.vt.edu/~wwwbtb/book/chap1/java_hist.html A history of
   Java]
   === '''''Java Implementations''''' ===
   ==== Proprietary ====
   * [http://java.sun.com SUN JDK] from [[SUN]]
   * [http://www-128.ibm.com/developerworks/java/jdk/ IBM JDK] from
   [[IBM]]
   *
   [http://www.bea.com/framework.jsp?CNT=index.htm&FP=/content/products/jr
   ockit BEA Systems JRockit] [[JVM]] from [[BEA Systems]]
   * [http://www.blackdown.org Blackdown Java] for [[Linux]], includes
   [[Mozilla]] plugin
   ==== Open source ====
   * [http://www.gnu.org/software/classpath/ GNU Classpath] from [[GNU]] -
   currently being [[Merge (revision control)|merged]] with libgcj of the
   [http://gcc.gnu.org/java/ GNU Compiler for Java]
   * [http://incubator.apache.org/harmony/ Apache Harmony] (see [[Apache
   Harmony|Harmony]]) an [[Apache Software Foundation]] proposed
   implementation of the Java programming language, starting with J2SE 5.0
   === Criticism ===
   * [http://www.gnu.org/philosophy/java-trap.html Free But Shackled‚ÄîThe
   Java Trap], by [[Richard Stallman]], [[April 12]], [[2004]].
   ([http://today.java.net/jag/page7.html#59 James Gosling's response])
   * [http://www.research.att.com/~bs/bs_faq.html#Java Is Java the
   language you would have designed if you didn't have to be compatible
   with C?], by [[Bjarne Stroustrup]]
   * [http://www.softpanorama.org/Lang/java.shtml Softpanorama Java
   Critique Page: Java vs Scripting Languages], by [[Nikolai Bezroukov]]
   * [http://www.paulgraham.com/javacover.html Java's Cover] by [[Paul
   Graham]], April 2001
   * [http://www.joelonsoftware.com/articles/ThePerilsofJavaSchools.html
   The Perils of JavaSchools] by [[Joel Spolsky]] (criticism of the use of
   Java to teach computer science in college)
   * [http://www.cs.berkeley.edu/~wkahan/JAVAhurt.pdf How Java‚Äôs
   Floating-Point Hurts Everyone Everywhere], by [[W. Kahan und Joseph D.
   Darcy]] at the ''ACM 1998 Workshop on Java for High‚ÄìPerformance Network
   Computing''
   === Java-like languages ===
   * [http://nice.sourceforge.net/ The Nice programming language], a
   language whose goal is to overcome many of Java's shortcomings while
   staying true to its Java roots
   * For a long list of languages based on Java known to Wikipedia, see:
   [http://en.wikipedia.org/wiki/Category:Java_programming_language_family
   Category: Java programming language family]
   {{step||[[Mandarax]], [[Nice programming language|Nice]]}}
   Source(s): [122]http://en.wikipedia.org/wiki/Java_%28Sun...
   [123]http://en.wikipedia.org/wiki/Java_progra...
   [124]Ben Ferrari ¬∑ 9 years ago
   0
   Thumbs up
   0
   Thumbs down
   Comment
   [profile_b96.png]

   Add a comment

   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   Submit
   []
   ¬∑ just now
   Report Abuse
     * [125]ch_nagarajind
       a platform independent and Object Oriented Language
       Programming Language
       [126]ch_nagarajind ¬∑ 9 years ago
       0
       Thumbs up
       0
       Thumbs down
       Comment
       [profile_b96.png]
       Add a comment

       ____________________________________________________________
       ____________________________________________________________
       ____________________________________________________________
       ____________________________________________________________
       Submit
       []
       ¬∑ just now
       Report Abuse
     * [127]vinay pareek
       java is a programming language,it is so popular becaz it had very
       good security n much easy then othere language
       [128]vinay pareek ¬∑ 9 years ago
       0
       Thumbs up
       0
       Thumbs down
       Comment
       [profile_b96.png]
       Add a comment

       ____________________________________________________________
       ____________________________________________________________
       ____________________________________________________________
       ____________________________________________________________
       Submit
       []
       ¬∑ just now
       Report Abuse
     * [129]globalreach
       a programming language..
       Source(s): [130]http://tinyurl.com/o5e26
       [131]globalreach ¬∑ 9 years ago
       0
       Thumbs up
       0
       Thumbs down
       Comment
       [profile_b96.png]
       Add a comment

       ____________________________________________________________
       ____________________________________________________________
       ____________________________________________________________
       ____________________________________________________________
       Submit
       []
       ¬∑ just now
       Report Abuse
     * [132]dave
       you need it to see somethings you might come across on the web .
       its safe and free to download
       [133]dave ¬∑ 9 years ago
       0
       Thumbs up
       0
       Thumbs down
       Comment
       [profile_b96.png]
       Add a comment

       ____________________________________________________________
       ____________________________________________________________
       ____________________________________________________________
       ____________________________________________________________
       Submit
       []
       ¬∑ just now
       Report Abuse
     * [134]melissa
       programming langauge or coffee.
       [135]melissa ¬∑ 9 years ago
       0
       Thumbs up
       0
       Thumbs down
       Comment
       [profile_b96.png]
       Add a comment

       ____________________________________________________________
       ____________________________________________________________
       ____________________________________________________________
       ____________________________________________________________
       Submit
       []
       ¬∑ just now
       Report Abuse

Add your answer

   What is java?
   Add your answer

   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________

   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   Source
   Submit Cancel

Report Abuse

   (*) I think this question violates the Community Guidelines

   Chat or rant, adult content, spam, insulting other members,[136]show
   more
   ( ) I think this question violates the Terms of Service

   Harm to minors, violence or threats, harassment or privacy invasion,
   impersonation or misrepresentation, fraud or phishing, [137]show more

Additional Details


   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________

   If you believe your intellectual property has been infringed and would
   like to file a complaint, please see our [138]Copyright/IP Policy
   Report Abuse
   Cancel

Report Abuse

   (*) I think this answer violates the Community Guidelines

   Chat or rant, adult content, spam, insulting other members,[139]show
   more
   ( ) I think this answer violates the Terms of Service

   Harm to minors, violence or threats, harassment or privacy invasion,
   impersonation or misrepresentation, fraud or phishing, [140]show more

Additional Details


   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________

   If you believe your intellectual property has been infringed and would
   like to file a complaint, please see our [141]Copyright/IP Policy
   Report Abuse
   Cancel

Report Abuse

   (*) I think this comment violates the Community Guidelines

   Chat or rant, adult content, spam, insulting other members,[142]show
   more
   ( ) I think this comment violates the Terms of Service

   Harm to minors, violence or threats, harassment or privacy invasion,
   impersonation or misrepresentation, fraud or phishing, [143]show more

Additional Details


   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________

   If you believe your intellectual property has been infringed and would
   like to file a complaint, please see our [144]Copyright/IP Policy
   Report Abuse
   Cancel

Ask a question

   usually answered in minutes!

   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________

   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   Expand¬ª
   Details
   Details
   Submit
   Existing questions

   [145]More
     * Tell us some more
     * Upload in Progress

     * Upload failed. Please upload a file larger than 100x100 pixels
     * We are experiencing some problems, please try again.
     * You can only upload files of type PNG, JPG, or JPEG.
     * You can only upload files of type 3GP, 3GPP, MP4, MOV, AVI, MPG,
       MPEG, or RM.
     * You can only upload photos smaller than 5 MB.
     * You can only upload videos smaller than 600MB.
     * You can only upload a photo (png, jpg, jpeg) or a video (3gp, 3gpp,
       mp4, mov, avi, mpg, mpeg, rm).
     * You can only upload a photo or a video.
     * Video should be smaller than <b>600mb/5 minutes</b>
     * Photo should be smaller than <b>5mb</b>
     * Video should be smaller than <b>600mb/5 minutes</b>
       Photo should be smaller than <b>5mb</b>

Related Questions

   [146]Java Java Java Java Java Java Java?
   [147]Java Java Java java java?
   [148]Java java java java java java javaaaa!?
   More questions
   [149]Java Java Java Java.............................
   [150]Java Java Java Java Java Java pls pls pls help?

Answer Questions

   [151]A student reports this problem when using HTML and JavaScript?
   [152]A programmer reports this problem when using PHP:?
   [153]How do character pointers work with strings in C?
   [154]"Class" in python, how will i be able to use it?

   Trending
   [155]How do I print the internet?
   16 answers
   [156]Programming and animating good for my age?
   4 answers
   [157]Whom would buy my COBOL programming services?
   4 answers
   More questions
   [158]What's the difference between a https and http?
   9 answers
   [159]Best web browser?
   306 answers
   [160]What are the must need languages for a Web Developer?
   40 answers
     * [161]Terms
     * [162]Privacy
     * [163]AdChoices
     * [164]RSS

References

   Visible links
   1. https://answers.yahoo.com/rss/question?qid=20060916003515AAMaCBa
   2. https://uk.answers.yahoo.com/question/index?qid=20060916003515AAMaCBa
   3. https://answers.yahoo.com/question/index?qid=20060916003515AAMaCBa
   4. https://sg.answers.yahoo.com/question/index?qid=20060916003515AAMaCBa
   5. https://in.answers.yahoo.com/question/index?qid=20060916003515AAMaCBa
   6. https://ca.answers.yahoo.com/question/index?qid=20060916003515AAMaCBa
   7. https://au.answers.yahoo.com/question/index?qid=20060916003515AAMaCBa
   8. https://nz.answers.yahoo.com/question/index?qid=20060916003515AAMaCBa
   9. https://ph.answers.yahoo.com/question/index?qid=20060916003515AAMaCBa
  10. https://malaysia.answers.yahoo.com/question/index?qid=20060916003515AAMaCBa
  11. https://answers.yahoo.com/question/index?qid=20060916003515AAMaCBa&page=2
  12. https://www.yahoo.com/
  13. https://mail.yahoo.com/?.intl=us&.lang=en-US&.src=ym
  14. https://search.yahoo.com/search
  15. http://news.yahoo.com/
  16. http://sports.yahoo.com/
  17. http://finance.yahoo.com/
  18. https://weather.yahoo.com/
  19. https://games.yahoo.com/
  20. https://answers.yahoo.com/
  21. https://screen.yahoo.com/
  22. https://www.flickr.com/
  23. https://mobile.yahoo.com/
  24. http://everything.yahoo.com/
  25. https://s.yimg.com/os/mit/media/m/base/images/transparent-95031.png
  26. https://www.yahoo.com/politics
  27. https://celebrity.yahoo.com/
  28. https://www.yahoo.com/movies
  29. https://www.yahoo.com/music
  30. https://www.yahoo.com/tv
  31. https://groups.yahoo.com/
  32. https://www.yahoo.com/health
  33. https://www.yahoo.com/style
  34. https://www.yahoo.com/beauty
  35. https://www.yahoo.com/food
  36. https://www.yahoo.com/parenting
  37. https://www.yahoo.com/makers
  38. https://www.yahoo.com/tech
  39. http://shopping.yahoo.com/
  40. https://www.yahoo.com/travel
  41. https://autos.yahoo.com/
  42. https://www.yahoo.com/realestate
  43. https://www.mozilla.org/firefox/new/?utm_source=yahoo&utm_medium=referral&utm_campaign=y-uh&utm_content=y-install-new-firefox
  44. https://answers.yahoo.com/
  45. https://login.yahoo.com/config/login?.src=knowsrch&.intl=us&.lang=en-US&.done=https://answers.yahoo.com/question/index?qid=20060916003515AAMaCBa
  46. https://mail.yahoo.com/?.intl=us&.lang=en-US&.src=ym
  47. https://answers.yahoo.com/question/index?qid=20060916003515AAMaCBa
  48. https://login.yahoo.com/account/personalinfo?.intl=us&.lang=en-US&.done=https://answers.yahoo.com/question/index?qid=20060916003515AAMaCBa&.src=knowsrch
  49. https://help.yahoo.com/l/us/yahoo/answers/
  50. http://suggestions.yahoo.com/?prop=answers
  51. http://yahoo.uservoice.com/forums/211240
  52. https://answers.yahoo.com/
  53. https://answers.yahoo.com/dir/index
  54. https://answers.yahoo.com/dir/index?sid=396545012
  55. https://answers.yahoo.com/dir/index?sid=396545144
  56. https://answers.yahoo.com/dir/index?sid=396545013
  57. https://answers.yahoo.com/dir/index?sid=396545311
  58. https://answers.yahoo.com/dir/index?sid=396545660
  59. https://answers.yahoo.com/dir/index?sid=396545014
  60. https://answers.yahoo.com/dir/index?sid=396545327
  61. https://answers.yahoo.com/dir/index?sid=396545015
  62. https://answers.yahoo.com/dir/index?sid=396545016
  63. https://answers.yahoo.com/dir/index?sid=396545451
  64. https://answers.yahoo.com/dir/index?sid=396545433
  65. https://answers.yahoo.com/dir/index?sid=396545367
  66. https://answers.yahoo.com/dir/index?sid=396545019
  67. https://answers.yahoo.com/dir/index?sid=396545018
  68. https://answers.yahoo.com/dir/index?sid=396545394
  69. https://answers.yahoo.com/dir/index?sid=396545401
  70. https://answers.yahoo.com/dir/index?sid=396545439
  71. https://answers.yahoo.com/dir/index?sid=396545443
  72. https://answers.yahoo.com/dir/index?sid=396545444
  73. https://answers.yahoo.com/dir/index?sid=396546046
  74. https://answers.yahoo.com/dir/index?sid=396545122
  75. https://answers.yahoo.com/dir/index?sid=396545301
  76. https://answers.yahoo.com/dir/index?sid=396545454
  77. https://answers.yahoo.com/dir/index?sid=396545213
  78. https://answers.yahoo.com/dir/index?sid=396545469
  79. https://answers.yahoo.com/dir/index?sid=396546089
  80. https://ar.answers.yahoo.com/
  81. https://au.answers.yahoo.com/
  82. https://br.answers.yahoo.com/
  83. https://ca.answers.yahoo.com/
  84. https://fr.answers.yahoo.com/
  85. https://de.answers.yahoo.com/
  86. https://in.answers.yahoo.com/
  87. https://id.answers.yahoo.com/
  88. https://it.answers.yahoo.com/
  89. https://malaysia.answers.yahoo.com/
  90. https://mx.answers.yahoo.com/
  91. https://nz.answers.yahoo.com/
  92. https://ph.answers.yahoo.com/
  93. https://qc.answers.yahoo.com/
  94. https://sg.answers.yahoo.com/
  95. https://tw.answers.yahoo.com/
  96. https://hk.answers.yahoo.com/
  97. https://es.answers.yahoo.com/
  98. https://th.answers.yahoo.com/
  99. https://uk.answers.yahoo.com/
 100. https://vn.answers.yahoo.com/
 101. https://espanol.answers.yahoo.com/
 102. https://answers.yahoo.com/info/about
 103. https://answers.yahoo.com/info/community_guidelines
 104. https://answers.yahoo.com/rank_total
 105. https://answers.yahoo.com/info/knowledge_partners
 106. https://answers.yahoo.com/info/scoring_system
 107. http://yahooanswers.tumblr.com/
 108. https://safely.yahoo.com/yahoo-answers-safety-guide-000049380.html
 109. https://mobile.yahoo.com/yahoo/?src=gta
 110. https://answers.yahoo.com/dir/index?sid=396545660&link=list
 111. https://answers.yahoo.com/dir/index?sid=396545663&link=list
 112. https://answers.yahoo.com/question/nextQuestion?lang=en-US&qs=REFERENCE&qid=20060916003515AAMaCBa&cid=396545663
 113. https://answers.yahoo.com/activity/questions?show=SOPVAQA43UKZMZ5FFVZ5BTAMM4&t=g
 114. https://dmros.ysm.yahoo.com/ros/?c=cbdde9a6&w=678&h=315&ty=noscript&tt=what is java?&r=yahoo,+answers,+questions,+Computers+&+Internet,Programming+&+Design
 115. https://answers.yahoo.com/question/index?qid=20060916003515AAMaCBa&sort=V
 116. https://answers.yahoo.com/question/index?qid=20060916003515AAMaCBa&sort=N
 117. https://answers.yahoo.com/question/index?qid=20060916003515AAMaCBa&sort=O
 118. https://answers.yahoo.com/activity/questions?show=HQ5DLR55QJ5LC5IF2DO2ZZFSFM&t=g
 119. http://www.open-std.org/JTC1/SC22/JSG/
 120. http://www.jcp.org/en/home/index
 121. http://java.sun.com/docs/books/tutorial/deployment/applet/applettag.html][http://java.sun.com/docs/books/tutorial/deployment/applet/mixedbrowser.html])
 122. http://en.wikipedia.org/wiki/Java_(Sun)
 123. http://en.wikipedia.org/wiki/Java_programming_language
 124. https://answers.yahoo.com/activity/questions?show=HQ5DLR55QJ5LC5IF2DO2ZZFSFM&t=g
 125. https://answers.yahoo.com/activity/questions?show=IQ2L4OA4HEKNOR3U27AAT2AGIQ&t=g
 126. https://answers.yahoo.com/activity/questions?show=IQ2L4OA4HEKNOR3U27AAT2AGIQ&t=g
 127. https://answers.yahoo.com/activity/questions?show=XR4BCR2MV7EZN3EBBIMXMSFMRE&t=g
 128. https://answers.yahoo.com/activity/questions?show=XR4BCR2MV7EZN3EBBIMXMSFMRE&t=g
 129. https://answers.yahoo.com/activity/questions?show=MT7R6TF3DKB475B4XB55AITQBE&t=g
 130. http://tinyurl.com/o5e26
 131. https://answers.yahoo.com/activity/questions?show=MT7R6TF3DKB475B4XB55AITQBE&t=g
 132. https://answers.yahoo.com/activity/questions?show=Q6L7YVOAFCDB7HL7NDRTMRXGQQ&t=g
 133. https://answers.yahoo.com/activity/questions?show=Q6L7YVOAFCDB7HL7NDRTMRXGQQ&t=g
 134. https://answers.yahoo.com/activity/questions?show=&t=g
 135. https://answers.yahoo.com/activity/questions?show=&t=g
 136. https://answers.yahoo.com/info/community_guidelines
 137. https://info.yahoo.com/legal/us/yahoo/utos/terms/
 138. http://info.yahoo.com/copyright/us/details.html?pir=woxj.j1ibUnULFEIY6nyJQLxD.PLEphTPFivskb06cCK3lggdCqKTxtZqQ
 139. https://answers.yahoo.com/info/community_guidelines
 140. https://info.yahoo.com/legal/us/yahoo/utos/terms/
 141. http://info.yahoo.com/copyright/us/details.html?pir=woxj.j1ibUnULFEIY6nyJQLxD.PLEphTPFivskb06cCK3lggdCqKTxtZqQ
 142. https://answers.yahoo.com/info/community_guidelines
 143. https://info.yahoo.com/legal/us/yahoo/utos/terms/
 144. http://info.yahoo.com/copyright/us/details.html?pir=woxj.j1ibUnULFEIY6nyJQLxD.PLEphTPFivskb06cCK3lggdCqKTxtZqQ
 145. https://answers.yahoo.com/question/index?qid=20060916003515AAMaCBa
 146. https://answers.yahoo.com/question/index?qid=20081231022826AAetnZf
 147. https://answers.yahoo.com/question/index?qid=20120527081114AA1CLIi
 148. https://answers.yahoo.com/question/index?qid=20090216072344AAVzRcO
 149. https://answers.yahoo.com/question/index?qid=20081231001406AAZ2PQa
 150. https://answers.yahoo.com/question/index?qid=20090402073448AAVRCpH
 151. https://answers.yahoo.com/question/index?qid=20151103160314AAkSJxd
 152. https://answers.yahoo.com/question/index?qid=20151103160434AAHIoBT
 153. https://answers.yahoo.com/question/index?qid=20151103162129AAWb6ij
 154. https://answers.yahoo.com/question/index?qid=20151103160405AALke6A
 155. https://answers.yahoo.com/question/index?qid=20151102124601AAs9jX3
 156. https://answers.yahoo.com/question/index?qid=20151103101935AAHajwV
 157. https://answers.yahoo.com/question/index?qid=20151102014041AARbBwB
 158. https://answers.yahoo.com/question/index?qid=20151102143739AACPQ0l
 159. https://answers.yahoo.com/question/index?qid=20151025203557AAeIJqx
 160. https://answers.yahoo.com/question/index?qid=20151027192650AAxD1DS
 161. https://info.yahoo.com/legal/us/yahoo/utos/terms/
 162. https://info.yahoo.com/privacy/us/yahoo/answers/details.html
 163. https://info.yahoo.com/privacy/us/yahoo/relevantads.html
 164. https://answers.yahoo.com/rss/question?qid=20060916003515AAMaCBa

   Hidden links:
 166. https://answers.yahoo.com/question/index?qid=20060916003515AAMaCBa
 167. https://answers.yahoo.com/question/index?qid=20060916003515AAMaCBa
 168. https://answers.yahoo.com/question/index?qid=20060916003515AAMaCBa
 169. https://answers.yahoo.com/question/index?qid=20060916003515AAMaCBa
 170. https://answers.yahoo.com/question/index?qid=20060916003515AAMaCBa
 171. https://answers.yahoo.com/question/index?qid=20060916003515AAMaCBa
 172. https://answers.yahoo.com/question/index?qid=20060916003515AAMaCBa
